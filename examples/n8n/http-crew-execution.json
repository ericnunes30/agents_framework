{
  "name": "Agent Framework - HTTP Crew Execution",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "http://localhost:3000/api/crews/execute",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "{\n  \"configPath\": \"examples/crews/research-crew.yaml\",\n  \"input\": \"{{ $json.input }}\",\n  \"options\": {\n    \"streaming\": false,\n    \"timeout\": 120000,\n    \"maxIterations\": 10\n  }\n}"
      },
      "name": "Execute Crew",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [320, 300],
      "id": "crew-execute"
    },
    {
      "parameters": {
        "httpMethod": "GET",
        "url": "=http://localhost:3000/api/crews/status/{{ $json.executionId }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "name": "Check Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [540, 300],
      "id": "status-check"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "status-condition",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "name": "Status Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [760, 300],
      "id": "if-completed"
    },
    {
      "parameters": {
        "httpMethod": "GET",
        "url": "=http://localhost:3000/api/crews/results/{{ $json.executionId }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "name": "Get Results",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [980, 200],
      "id": "get-results"
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "seconds"
      },
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [980, 400],
      "id": "wait-retry"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    input: \"Analyze the impact of AI on healthcare, focusing on recent breakthrough technologies and their potential applications\",\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "name": "Input Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [100, 300],
      "id": "input-data"
    },
    {
      "parameters": {
        "jsCode": "// Process the crew execution results\nconst result = $input.first().json;\n\nreturn [{\n  json: {\n    executionId: result.executionId,\n    finalResult: result.result,\n    executionTime: result.executionTime,\n    tokensUsed: result.tokensUsed,\n    summary: `Crew execution completed in ${result.executionTime}ms using ${result.tokensUsed || 0} tokens`,\n    processedAt: new Date().toISOString()\n  }\n}];"
      },
      "name": "Process Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1200, 200],
      "id": "process-results"
    }
  ],
  "connections": {
    "Execute Crew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Status Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status Check": {
      "main": [
        [
          {
            "node": "Get Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Data": {
      "main": [
        [
          {
            "node": "Execute Crew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Results": {
      "main": [
        [
          {
            "node": "Process Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "meta": {
    "instanceId": "agent-framework-crew-example"
  },
  "tags": [
    {
      "createdAt": "2025-01-24T00:00:00.000Z",
      "updatedAt": "2025-01-24T00:00:00.000Z",
      "id": "agent-framework",
      "name": "Agent Framework"
    }
  ]
}